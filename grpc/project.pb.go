// Code generated by protoc-gen-go. DO NOT EDIT.
// source: project.proto

package project

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Project struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Goal                 string   `protobuf:"bytes,3,opt,name=goal,proto3" json:"goal,omitempty"`
	Price                string   `protobuf:"bytes,4,opt,name=price,proto3" json:"price,omitempty"`
	Risk                 string   `protobuf:"bytes,5,opt,name=risk,proto3" json:"risk,omitempty"`
	Duration             string   `protobuf:"bytes,6,opt,name=duration,proto3" json:"duration,omitempty"`
	Rate                 string   `protobuf:"bytes,7,opt,name=rate,proto3" json:"rate,omitempty"`
	Cbenefit             string   `protobuf:"bytes,8,opt,name=cbenefit,proto3" json:"cbenefit,omitempty"`
	Status               string   `protobuf:"bytes,9,opt,name=status,proto3" json:"status,omitempty"`
	Scheme               string   `protobuf:"bytes,10,opt,name=scheme,proto3" json:"scheme,omitempty"`
	Hidden               bool     `protobuf:"varint,11,opt,name=hidden,proto3" json:"hidden,omitempty"`
	CategoryId           int32    `protobuf:"varint,12,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	CreatedBy            int32    `protobuf:"varint,13,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	ProjectId            int32    `protobuf:"varint,14,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Description          string   `protobuf:"bytes,15,opt,name=description,proto3" json:"description,omitempty"`
	Address              string   `protobuf:"bytes,16,opt,name=address,proto3" json:"address,omitempty"`
	StartPeriod          string   `protobuf:"bytes,17,opt,name=start_period,json=startPeriod,proto3" json:"start_period,omitempty"`
	FailedDate           string   `protobuf:"bytes,18,opt,name=failed_date,json=failedDate,proto3" json:"failed_date,omitempty"`
	OngoingDate          string   `protobuf:"bytes,19,opt,name=ongoing_date,json=ongoingDate,proto3" json:"ongoing_date,omitempty"`
	FinishedDate         string   `protobuf:"bytes,20,opt,name=finished_date,json=finishedDate,proto3" json:"finished_date,omitempty"`
	CityId               int32    `protobuf:"varint,21,opt,name=city_id,json=cityId,proto3" json:"city_id,omitempty"`
	ConfirmRdb           int32    `protobuf:"varint,22,opt,name=confirm_rdb,json=confirmRdb,proto3" json:"confirm_rdb,omitempty"`
	OverdueDate          string   `protobuf:"bytes,23,opt,name=overdue_date,json=overdueDate,proto3" json:"overdue_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Project) Reset()         { *m = Project{} }
func (m *Project) String() string { return proto.CompactTextString(m) }
func (*Project) ProtoMessage()    {}
func (*Project) Descriptor() ([]byte, []int) {
	return fileDescriptor_8340e6318dfdfac2, []int{0}
}

func (m *Project) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Project.Unmarshal(m, b)
}
func (m *Project) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Project.Marshal(b, m, deterministic)
}
func (m *Project) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Project.Merge(m, src)
}
func (m *Project) XXX_Size() int {
	return xxx_messageInfo_Project.Size(m)
}
func (m *Project) XXX_DiscardUnknown() {
	xxx_messageInfo_Project.DiscardUnknown(m)
}

var xxx_messageInfo_Project proto.InternalMessageInfo

func (m *Project) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Project) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Project) GetGoal() string {
	if m != nil {
		return m.Goal
	}
	return ""
}

func (m *Project) GetPrice() string {
	if m != nil {
		return m.Price
	}
	return ""
}

func (m *Project) GetRisk() string {
	if m != nil {
		return m.Risk
	}
	return ""
}

func (m *Project) GetDuration() string {
	if m != nil {
		return m.Duration
	}
	return ""
}

func (m *Project) GetRate() string {
	if m != nil {
		return m.Rate
	}
	return ""
}

func (m *Project) GetCbenefit() string {
	if m != nil {
		return m.Cbenefit
	}
	return ""
}

func (m *Project) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Project) GetScheme() string {
	if m != nil {
		return m.Scheme
	}
	return ""
}

func (m *Project) GetHidden() bool {
	if m != nil {
		return m.Hidden
	}
	return false
}

func (m *Project) GetCategoryId() int32 {
	if m != nil {
		return m.CategoryId
	}
	return 0
}

func (m *Project) GetCreatedBy() int32 {
	if m != nil {
		return m.CreatedBy
	}
	return 0
}

func (m *Project) GetProjectId() int32 {
	if m != nil {
		return m.ProjectId
	}
	return 0
}

func (m *Project) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Project) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Project) GetStartPeriod() string {
	if m != nil {
		return m.StartPeriod
	}
	return ""
}

func (m *Project) GetFailedDate() string {
	if m != nil {
		return m.FailedDate
	}
	return ""
}

func (m *Project) GetOngoingDate() string {
	if m != nil {
		return m.OngoingDate
	}
	return ""
}

func (m *Project) GetFinishedDate() string {
	if m != nil {
		return m.FinishedDate
	}
	return ""
}

func (m *Project) GetCityId() int32 {
	if m != nil {
		return m.CityId
	}
	return 0
}

func (m *Project) GetConfirmRdb() int32 {
	if m != nil {
		return m.ConfirmRdb
	}
	return 0
}

func (m *Project) GetOverdueDate() string {
	if m != nil {
		return m.OverdueDate
	}
	return ""
}

type User struct {
	UserBy               string   `protobuf:"bytes,1,opt,name=user_by,json=userBy,proto3" json:"user_by,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_8340e6318dfdfac2, []int{1}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetUserBy() string {
	if m != nil {
		return m.UserBy
	}
	return ""
}

type Reponse struct {
	Data                 string   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Reponse) Reset()         { *m = Reponse{} }
func (m *Reponse) String() string { return proto.CompactTextString(m) }
func (*Reponse) ProtoMessage()    {}
func (*Reponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8340e6318dfdfac2, []int{2}
}

func (m *Reponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Reponse.Unmarshal(m, b)
}
func (m *Reponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Reponse.Marshal(b, m, deterministic)
}
func (m *Reponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Reponse.Merge(m, src)
}
func (m *Reponse) XXX_Size() int {
	return xxx_messageInfo_Reponse.Size(m)
}
func (m *Reponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Reponse.DiscardUnknown(m)
}

var xxx_messageInfo_Reponse proto.InternalMessageInfo

func (m *Reponse) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type Pagination struct {
	Limit                string   `protobuf:"bytes,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset               string   `protobuf:"bytes,2,opt,name=offset,proto3" json:"offset,omitempty"`
	ShortBy              string   `protobuf:"bytes,3,opt,name=shortBy,proto3" json:"shortBy,omitempty"`
	Shortvalue           string   `protobuf:"bytes,4,opt,name=shortvalue,proto3" json:"shortvalue,omitempty"`
	Query                string   `protobuf:"bytes,5,opt,name=query,proto3" json:"query,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Pagination) Reset()         { *m = Pagination{} }
func (m *Pagination) String() string { return proto.CompactTextString(m) }
func (*Pagination) ProtoMessage()    {}
func (*Pagination) Descriptor() ([]byte, []int) {
	return fileDescriptor_8340e6318dfdfac2, []int{3}
}

func (m *Pagination) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pagination.Unmarshal(m, b)
}
func (m *Pagination) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pagination.Marshal(b, m, deterministic)
}
func (m *Pagination) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pagination.Merge(m, src)
}
func (m *Pagination) XXX_Size() int {
	return xxx_messageInfo_Pagination.Size(m)
}
func (m *Pagination) XXX_DiscardUnknown() {
	xxx_messageInfo_Pagination.DiscardUnknown(m)
}

var xxx_messageInfo_Pagination proto.InternalMessageInfo

func (m *Pagination) GetLimit() string {
	if m != nil {
		return m.Limit
	}
	return ""
}

func (m *Pagination) GetOffset() string {
	if m != nil {
		return m.Offset
	}
	return ""
}

func (m *Pagination) GetShortBy() string {
	if m != nil {
		return m.ShortBy
	}
	return ""
}

func (m *Pagination) GetShortvalue() string {
	if m != nil {
		return m.Shortvalue
	}
	return ""
}

func (m *Pagination) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func init() {
	proto.RegisterType((*Project)(nil), "project.Project")
	proto.RegisterType((*User)(nil), "project.User")
	proto.RegisterType((*Reponse)(nil), "project.Reponse")
	proto.RegisterType((*Pagination)(nil), "project.Pagination")
}

func init() { proto.RegisterFile("project.proto", fileDescriptor_8340e6318dfdfac2) }

var fileDescriptor_8340e6318dfdfac2 = []byte{
	// 550 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x94, 0xc1, 0x6e, 0xda, 0x4c,
	0x10, 0xc7, 0x3f, 0xf3, 0x01, 0x86, 0x01, 0xd2, 0x74, 0x43, 0x93, 0x55, 0xa4, 0x34, 0x84, 0x5e,
	0x38, 0x54, 0x54, 0x6a, 0xdf, 0x80, 0xa6, 0x07, 0xa4, 0x1e, 0x10, 0x52, 0xcf, 0x68, 0xf1, 0x8e,
	0x61, 0x5b, 0xe3, 0x75, 0x77, 0xd7, 0x91, 0x7c, 0xee, 0xad, 0x6f, 0xd6, 0xb7, 0xaa, 0x76, 0x76,
	0x9d, 0xe4, 0x52, 0x29, 0xb7, 0xf9, 0xff, 0xe6, 0xef, 0xf1, 0xcc, 0x30, 0x06, 0x26, 0x95, 0xd1,
	0xdf, 0x31, 0x73, 0xcb, 0xca, 0x68, 0xa7, 0x59, 0x1a, 0xe5, 0xfc, 0x57, 0x0f, 0xd2, 0x4d, 0x88,
	0xd9, 0x19, 0x74, 0x94, 0xe4, 0xc9, 0x2c, 0x59, 0xf4, 0xb6, 0x1d, 0x25, 0x19, 0x83, 0x6e, 0x29,
	0x4e, 0xc8, 0x3b, 0xb3, 0x64, 0x31, 0xdc, 0x52, 0xec, 0xd9, 0x41, 0x8b, 0x82, 0xff, 0x1f, 0x98,
	0x8f, 0xd9, 0x14, 0x7a, 0x95, 0x51, 0x19, 0xf2, 0x2e, 0xc1, 0x20, 0xbc, 0xd3, 0x28, 0xfb, 0x83,
	0xf7, 0x82, 0xd3, 0xc7, 0xec, 0x1a, 0x06, 0xb2, 0x36, 0xc2, 0x29, 0x5d, 0xf2, 0x3e, 0xf1, 0x47,
	0x4d, 0x7e, 0xe1, 0x90, 0xa7, 0xd1, 0x2f, 0x1c, 0x7a, 0x7f, 0xb6, 0xc7, 0x12, 0x73, 0xe5, 0xf8,
	0x20, 0xf8, 0x5b, 0xcd, 0x2e, 0xa1, 0x6f, 0x9d, 0x70, 0xb5, 0xe5, 0x43, 0xca, 0x44, 0x45, 0x3c,
	0x3b, 0xe2, 0x09, 0x39, 0x44, 0x4e, 0xca, 0xf3, 0xa3, 0x92, 0x12, 0x4b, 0x3e, 0x9a, 0x25, 0x8b,
	0xc1, 0x36, 0x2a, 0x76, 0x0b, 0xa3, 0x4c, 0x38, 0x3c, 0x68, 0xd3, 0xec, 0x94, 0xe4, 0x63, 0x1a,
	0x1f, 0x5a, 0xb4, 0x96, 0xec, 0x06, 0x20, 0x33, 0x28, 0x1c, 0xca, 0xdd, 0xbe, 0xe1, 0x13, 0xca,
	0x0f, 0x23, 0x59, 0x35, 0x3e, 0x1d, 0x97, 0xe9, 0x1f, 0x3f, 0x0b, 0xe9, 0x48, 0xd6, 0x92, 0xcd,
	0x60, 0x24, 0xd1, 0x66, 0x46, 0x55, 0x34, 0xf5, 0x2b, 0xea, 0xe9, 0x39, 0x62, 0x1c, 0x52, 0x21,
	0xa5, 0x41, 0x6b, 0xf9, 0x39, 0x65, 0x5b, 0xc9, 0xee, 0x60, 0x6c, 0x9d, 0x30, 0x6e, 0x57, 0xa1,
	0x51, 0x5a, 0xf2, 0xd7, 0xe1, 0x61, 0x62, 0x1b, 0x42, 0xbe, 0xfb, 0x5c, 0xa8, 0x02, 0xe5, 0x4e,
	0xfa, 0xe5, 0x31, 0x72, 0x40, 0x40, 0xf7, 0x7e, 0x85, 0x77, 0x30, 0xd6, 0xe5, 0x41, 0xab, 0xf2,
	0x10, 0x1c, 0x17, 0xa1, 0x46, 0x64, 0x64, 0x79, 0x07, 0x93, 0x5c, 0x95, 0xca, 0x1e, 0xdb, 0x2a,
	0x53, 0xf2, 0x8c, 0x5b, 0x48, 0xa6, 0x2b, 0x48, 0x33, 0xe5, 0x68, 0x45, 0x6f, 0x68, 0xc6, 0xbe,
	0x97, 0x6b, 0xea, 0x20, 0xd3, 0x65, 0xae, 0xcc, 0x69, 0x67, 0xe4, 0x9e, 0x5f, 0xc6, 0xfd, 0x05,
	0xb4, 0x95, 0x7b, 0xea, 0xe0, 0x01, 0x8d, 0xac, 0x31, 0x54, 0xbf, 0x8a, 0x1d, 0x04, 0xe6, 0x8b,
	0xcf, 0x6f, 0xa1, 0xfb, 0xcd, 0xa2, 0xf1, 0x2f, 0xa9, 0x2d, 0x1a, 0xbf, 0xe7, 0x24, 0xfc, 0x78,
	0x5e, 0xae, 0x9a, 0xf9, 0x0d, 0xa4, 0x5b, 0xac, 0x74, 0x69, 0xe9, 0xae, 0xa4, 0x70, 0x22, 0x1a,
	0x28, 0x9e, 0xff, 0x4e, 0x00, 0x36, 0xe2, 0xa0, 0xca, 0x70, 0x4a, 0x53, 0xe8, 0x15, 0xea, 0xa4,
	0x5c, 0xf4, 0x04, 0xe1, 0x0f, 0x40, 0xe7, 0xb9, 0x45, 0x17, 0x0f, 0x3a, 0x2a, 0xbf, 0x7f, 0x7b,
	0xd4, 0xc6, 0xad, 0x9a, 0x78, 0xd5, 0xad, 0x64, 0x6f, 0x01, 0x28, 0x7c, 0x10, 0x45, 0xdd, 0x5e,
	0xf7, 0x33, 0xe2, 0xdf, 0xf3, 0xb3, 0x46, 0xd3, 0xc4, 0x1b, 0x0f, 0xe2, 0xe3, 0x9f, 0x04, 0x06,
	0xf1, 0x93, 0xb2, 0xec, 0x03, 0x74, 0xbf, 0x2a, 0xeb, 0xd8, 0xc5, 0xb2, 0xfd, 0x00, 0x9f, 0xfa,
	0xbc, 0x3e, 0x7f, 0x84, 0x71, 0xb8, 0xf9, 0x7f, 0x6c, 0x09, 0xfd, 0x7b, 0x74, 0x42, 0x15, 0xec,
	0x29, 0x1b, 0xab, 0xfd, 0xcb, 0xff, 0x99, 0x6e, 0xf1, 0x85, 0xfe, 0xf7, 0xd0, 0xfd, 0x22, 0x95,
	0x7b, 0x99, 0x7b, 0xdf, 0xa7, 0xbf, 0x8b, 0x4f, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0x48, 0x9f,
	0xfc, 0xc5, 0x3f, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ProjectsClient is the client API for Projects service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProjectsClient interface {
	List(ctx context.Context, in *Pagination, opts ...grpc.CallOption) (*Reponse, error)
	Detail(ctx context.Context, in *Project, opts ...grpc.CallOption) (*Reponse, error)
	Create(ctx context.Context, in *Project, opts ...grpc.CallOption) (*Reponse, error)
	Edit(ctx context.Context, in *Project, opts ...grpc.CallOption) (*Reponse, error)
}

type projectsClient struct {
	cc *grpc.ClientConn
}

func NewProjectsClient(cc *grpc.ClientConn) ProjectsClient {
	return &projectsClient{cc}
}

func (c *projectsClient) List(ctx context.Context, in *Pagination, opts ...grpc.CallOption) (*Reponse, error) {
	out := new(Reponse)
	err := c.cc.Invoke(ctx, "/project.Projects/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectsClient) Detail(ctx context.Context, in *Project, opts ...grpc.CallOption) (*Reponse, error) {
	out := new(Reponse)
	err := c.cc.Invoke(ctx, "/project.Projects/Detail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectsClient) Create(ctx context.Context, in *Project, opts ...grpc.CallOption) (*Reponse, error) {
	out := new(Reponse)
	err := c.cc.Invoke(ctx, "/project.Projects/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectsClient) Edit(ctx context.Context, in *Project, opts ...grpc.CallOption) (*Reponse, error) {
	out := new(Reponse)
	err := c.cc.Invoke(ctx, "/project.Projects/Edit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProjectsServer is the server API for Projects service.
type ProjectsServer interface {
	List(context.Context, *Pagination) (*Reponse, error)
	Detail(context.Context, *Project) (*Reponse, error)
	Create(context.Context, *Project) (*Reponse, error)
	Edit(context.Context, *Project) (*Reponse, error)
}

// UnimplementedProjectsServer can be embedded to have forward compatible implementations.
type UnimplementedProjectsServer struct {
}

func (*UnimplementedProjectsServer) List(ctx context.Context, req *Pagination) (*Reponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedProjectsServer) Detail(ctx context.Context, req *Project) (*Reponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Detail not implemented")
}
func (*UnimplementedProjectsServer) Create(ctx context.Context, req *Project) (*Reponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedProjectsServer) Edit(ctx context.Context, req *Project) (*Reponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Edit not implemented")
}

func RegisterProjectsServer(s *grpc.Server, srv ProjectsServer) {
	s.RegisterService(&_Projects_serviceDesc, srv)
}

func _Projects_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Pagination)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectsServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/project.Projects/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectsServer).List(ctx, req.(*Pagination))
	}
	return interceptor(ctx, in, info, handler)
}

func _Projects_Detail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Project)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectsServer).Detail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/project.Projects/Detail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectsServer).Detail(ctx, req.(*Project))
	}
	return interceptor(ctx, in, info, handler)
}

func _Projects_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Project)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectsServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/project.Projects/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectsServer).Create(ctx, req.(*Project))
	}
	return interceptor(ctx, in, info, handler)
}

func _Projects_Edit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Project)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectsServer).Edit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/project.Projects/Edit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectsServer).Edit(ctx, req.(*Project))
	}
	return interceptor(ctx, in, info, handler)
}

var _Projects_serviceDesc = grpc.ServiceDesc{
	ServiceName: "project.Projects",
	HandlerType: (*ProjectsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "List",
			Handler:    _Projects_List_Handler,
		},
		{
			MethodName: "Detail",
			Handler:    _Projects_Detail_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _Projects_Create_Handler,
		},
		{
			MethodName: "Edit",
			Handler:    _Projects_Edit_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "project.proto",
}
